[{"kind":1,"language":"markdown","value":"## SAS Data Exploration","outputs":[]},{"kind":1,"language":"markdown","value":"Use PROC CONTENTS to display metadata about a SAS dataset, including variable names, types, and labels—like a bee collecting all the essential details from flowers!","outputs":[]},{"kind":2,"language":"sas","value":"proc contents data=dst2 varnum;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Dive into the data hive by previewing the first 5 rows of the dataset with PROC PRINT.","outputs":[]},{"kind":2,"language":"sas","value":"proc print data=dst2(obs=5);\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"PROC SQL to print, The OUTOBS= option restricts the number of rows that PROC SQL displays or writes to a table. For example, if you specify OUTOBS=10 and insert values into a table by using a query, then PROC SQL inserts a maximum of 10 rows into the resulting table. OUTOBS= is similar to the SAS data set option OBS=.","outputs":[]},{"kind":2,"language":"sas","value":"proc sql outobs=5;\n    select *\n    from dst2;\nquit;\n    ","outputs":[]},{"kind":1,"language":"markdown","value":"Buzz through the data with PROC MEANS to calculate summary statistics—mean, median, and standard deviation—just like a pollinator gathering the best data from every flower!","outputs":[]},{"kind":2,"language":"sas","value":"proc means data=dst2;\n    var year;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"In PROC SQL, mean, min, max, std, and count replicate the default statistics from PROC MEANS.","outputs":[]},{"kind":2,"language":"sas","value":"title \"Analysis Variable : year\";\nproc sql;\n    select \n        count(year) as N,\n        mean(year) as Mean,\n         std(year) as StdDev,\n         min(year) as Minimum,\n        max(year) as Maximum        \n    from dst2;\nquit;","outputs":[]},{"kind":1,"language":"markdown","value":"Tally up the hive activity by generating frequency counts for the dataset dst2, ordered by frequency with PROC FREQ!","outputs":[]},{"kind":2,"language":"sas","value":"proc freq data=dst2 order=freq;\n    tables stateProvince scientificName;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Step 1: Get frequency and percent using PROC SQL<br>\n\nThis PROC SQL code creates a summary table showing the frequency and percent of each stateProvince value in dst2, by grouping the data and dividing each count by the total number of rows to mimic PROC FREQ output.","outputs":[]},{"kind":2,"language":"sas","value":"proc sql;\n    create table freq_state as\n    select \n        stateProvince,\n        count(*) as Frequency,\n        calculated Frequency / total_count * 100 as Percent format=6.2\n    from \n        (select * from dst2),\n        (select count(*) as total_count from dst2)\n    group by stateProvince\n    order by Frequency desc;\nquit;","outputs":[]},{"kind":1,"language":"markdown","value":"Step 2: Add cumulative frequency and percent using a DATA step<br>\n\nThis DATA step adds cumulative frequency and cumulative percent to each row in freq_state by retaining running totals across observations.","outputs":[]},{"kind":2,"language":"sas","value":"data freq_state_final;\n    set freq_state;\n    retain CumFreq CumPercent 0;\n    CumFreq + Frequency;\n    CumPercent + Percent;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Print the resulting dataset","outputs":[]},{"kind":2,"language":"sas","value":"proc sql;\n    select * from freq_state_final;\nquit;","outputs":[]}]